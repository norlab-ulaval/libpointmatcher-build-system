services:
  dependencies:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher-dependencies:${LPM_IMAGE_TAG:?err}
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.dependencies
      platforms:
        - "linux/amd64"
        - "linux/arm64/v8"
      args:
        BASE_IMAGE: ${DEPENDENCIES_BASE_IMAGE:?err}
        BASE_IMAGE_TAG: ${DEPENDENCIES_BASE_IMAGE_TAG:?err}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
        LPM_INSTALLED_LIBRARIES_PATH: ${LPM_INSTALLED_LIBRARIES_PATH:?err}
        LPM_LIBPOINTMATCHER_SRC_REPO_NAME: ${LPM_LIBPOINTMATCHER_SRC_REPO_NAME:?err}
    tty: true
    stdin_open: true
  dependencies-doc:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher-dependencies-doc:${LPM_IMAGE_TAG:?err}
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.dependencies_doc
      platforms:
        - "linux/amd64"
        - "linux/arm64/v8"
      args:
        PROJECT_HUB: ${LPM_PROJECT_DOCKERHUB}
        BASE_IMAGE: libpointmatcher-dependencies
        BASE_IMAGE_TAG: ${LPM_IMAGE_TAG}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
    tty: true
    stdin_open: true
  ci_build_and_test:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher-ci-build-and-test:${LPM_IMAGE_TAG:?err}
    pull_policy: build
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.libpointmatcher_ci_build_and_test
      no_cache: true   # (CRITICAL) ToDo: on task end >> unmute this line ←
      args:
        PROJECT_HUB: ${LPM_PROJECT_DOCKERHUB}
        BASE_IMAGE: libpointmatcher-dependencies
        BASE_IMAGE_TAG: ${LPM_IMAGE_TAG}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
        LIBPOINTMATCHER_VERSION: 'head'
        LIBPOINTMATCHER_CMAKE_BUILD_TYPE: ${LIBPOINTMATCHER_CMAKE_BUILD_TYPE:?err}
        LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG: '--build-system-CI-install --compile-test'
        # (Priority) ToDo: implement case (ref task NMO-263 LPM build case › compile python binding)
    init: true  # Ref post https://ddanilov.me/how-to-contain-a-crashed-container/
    tty: true
    stdin_open: true
  ci_build_and_test-amd64:
    extends: ci_build_and_test
    platform: "linux/amd64"
  ci_build_and_test-arm64v8:
    extends: ci_build_and_test
    platform: "linux/arm64/v8"
  ci_sitrep_build_and_test_all:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher-ci_sitrep_build_and_test_all:${LPM_IMAGE_TAG:?err}
    pull_policy: build
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.libpointmatcher_ci_build_and_test
      no_cache: true   # (CRITICAL) ToDo: on task end >> unmute this line ←
      args:
        PROJECT_HUB: ${LPM_PROJECT_DOCKERHUB}
        BASE_IMAGE: libpointmatcher-dependencies
        BASE_IMAGE_TAG: ${LPM_IMAGE_TAG}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
        LIBPOINTMATCHER_VERSION: ${LIBPOINTMATCHER_VERSION:?err}
        LIBPOINTMATCHER_CMAKE_BUILD_TYPE: ${LIBPOINTMATCHER_CMAKE_BUILD_TYPE:?err}
        LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG: '--compile-test'
        # (Priority) ToDo: implement case (ref task NMO-263 LPM build case › compile python binding)
    init: true  # Ref post https://ddanilov.me/how-to-contain-a-crashed-container/
    tty: true
    stdin_open: true
  ci_sitrep_build_and_test_all-amd64:
    extends: ci_sitrep_build_and_test_all
    platform: "linux/amd64"
  ci_sitrep_build_and_test_all-arm64v8:
    extends: ci_sitrep_build_and_test_all
    platform: "linux/arm64/v8"
  release:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher:${LPM_IMAGE_TAG:?err}
    container_name: libpointmatcher
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.libpointmatcher
      platforms:
        - "linux/amd64"
        - "linux/arm64/v8"
      no_cache: true
      args:
        PROJECT_HUB: ${LPM_PROJECT_DOCKERHUB}
        BASE_IMAGE: libpointmatcher-dependencies-doc
        BASE_IMAGE_TAG: ${LPM_IMAGE_TAG}
        IS_TEAMCITY_RUN: ${IS_TEAMCITY_RUN}
        LIBPOINTMATCHER_VERSION: ${LIBPOINTMATCHER_VERSION:?err}
        LIBPOINTMATCHER_CMAKE_BUILD_TYPE: 'Release'
        LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG: '--compile-test --generate-doc'
        # (Priority) ToDo: implement case (ref task NMO-263 LPM build case › compile python binding)
    tty: true
    stdin_open: true
    depends_on:
      - dependencies
      - dependencies-doc


