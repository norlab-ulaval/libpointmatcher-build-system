services:
  dependencies:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher-dependencies:${LPM_IMAGE_TAG:?err}
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.dependencies
      platforms:
        - "linux/amd64"
        - "linux/arm64/v8"
      args:
        BASE_IMAGE: ${DEPENDENCIES_BASE_IMAGE:?err}
        BASE_IMAGE_TAG: ${DEPENDENCIES_BASE_IMAGE_TAG:?err}
        LPM_INSTALLED_LIBRARIES_PATH: ${LPM_INSTALLED_LIBRARIES_PATH:?err}
        LPM_LIBPOINTMATCHER_SRC_REPO_NAME: ${LPM_LIBPOINTMATCHER_SRC_REPO_NAME:?err}
  dependencies-doc:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher-dependencies-doc:${LPM_IMAGE_TAG:?err}
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.dependencies_doc
      platforms:
        - "linux/amd64"
        - "linux/arm64/v8"
      args:
        PROJECT_HUB: ${LPM_PROJECT_DOCKERHUB}
        BASE_IMAGE: libpointmatcher-dependencies
        BASE_IMAGE_TAG: ${LPM_IMAGE_TAG}
    depends_on:
      - dependencies
  ci:
    # ToDo: validate >> --run-linux-amd64
    # ToDo: validate >> --run-linux-arm64v8
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher-ci:${LPM_IMAGE_TAG:?err}-job${LPM_JOB_ID}
    pull_policy: never
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.libpointmatcher_ci
      platforms:
        - "linux/amd64"
        - "linux/arm64/v8"
#      no_cache: true
      args:
        PROJECT_HUB: ${LPM_PROJECT_DOCKERHUB}
        BASE_IMAGE: libpointmatcher-dependencies
        BASE_IMAGE_TAG: ${LPM_IMAGE_TAG}
        LIBPOINTMATCHER_VERSION: 'head'
        LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG: '--build-system-CI-install --compile-test'
        # (Priority) ToDo: implement case (ref task NMO-263 LPM build case › compile python binding)
#    tty: true
#    stdin_open: true
    #    init: true  # Ref post https://ddanilov.me/how-to-contain-a-crashed-container/
#    depends_on:
#      - dependencies
  ci-linux-amd64-extend:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher-ci:${LPM_IMAGE_TAG:?err}-job${LPM_JOB_ID}
#    pull_policy: if_not_present
    platform: "linux/amd64"
    tty: true
    stdin_open: true
#    depends_on:
#      - ci
  ci-linux-arm64v8-extend:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher-ci:${LPM_IMAGE_TAG:?err}-job${LPM_JOB_ID}
#    pull_policy: never
    platform: "linux/arm64/v8"
    tty: true
    stdin_open: true
#    depends_on:
#      - ci
  ci-linux-amd64:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher-ci:${LPM_IMAGE_TAG:?err}-amd64
    platform: "linux/amd64"
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.libpointmatcher_ci
      platforms:
        - "linux/amd64"
      no_cache: true
      args:
        PROJECT_HUB: ${LPM_PROJECT_DOCKERHUB}
        BASE_IMAGE: libpointmatcher-dependencies
        BASE_IMAGE_TAG: ${LPM_IMAGE_TAG}
        LIBPOINTMATCHER_VERSION: 'head'
        LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG: '--build-system-CI-install --compile-test'
        # (Priority) ToDo: implement case (ref task NMO-263 LPM build case › compile python binding)
    tty: true
    stdin_open: true
    #    init: true  # Ref post https://ddanilov.me/how-to-contain-a-crashed-container/
#    depends_on:
#      - dependencies
  ci-linux-arm64v8:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher-ci:${LPM_IMAGE_TAG:?err}-arm64v8
    platform: "linux/arm64/v8"
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.libpointmatcher_ci
      platforms:
        - "linux/arm64/v8"
      no_cache: true
      args:
        PROJECT_HUB: ${LPM_PROJECT_DOCKERHUB}
        BASE_IMAGE: libpointmatcher-dependencies
        BASE_IMAGE_TAG: ${LPM_IMAGE_TAG}
        LIBPOINTMATCHER_VERSION: 'head'
        LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG: '--build-system-CI-install --compile-test'
        # (Priority) ToDo: implement case (ref task NMO-263 LPM build case › compile python binding)
    tty: true
    stdin_open: true
    #    init: true  # Ref post https://ddanilov.me/how-to-contain-a-crashed-container/
#    depends_on:
#      - dependencies
  release:
    image: ${LPM_PROJECT_DOCKERHUB:?err}/libpointmatcher:${LPM_IMAGE_TAG:?err}
    container_name: libpointmatcher
    build:
      context: ..
      dockerfile: ./build_system/ubuntu/Dockerfile.libpointmatcher
      platforms:
        - "linux/amd64"
        - "linux/arm64/v8"
      no_cache: true
      args:
        PROJECT_HUB: ${LPM_PROJECT_DOCKERHUB}
        BASE_IMAGE: libpointmatcher-dependencies-doc
        BASE_IMAGE_TAG: ${LPM_IMAGE_TAG}
        LIBPOINTMATCHER_VERSION: ${LIBPOINTMATCHER_VERSION:?err}
        LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG: '--compile-test --generate-doc'
        # (Priority) ToDo: implement case (ref task NMO-263 LPM build case › compile python binding)
    tty: true
    stdin_open: true
    depends_on:
      - dependencies
      - dependencies-doc


