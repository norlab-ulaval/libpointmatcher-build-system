ARG PROJECT_HUB=norlabulaval
ARG BASE_IMAGE=libpointmatcher-dependencies-doc
ARG BASE_IMAGE_TAG
FROM ${PROJECT_HUB}/${BASE_IMAGE}:${BASE_IMAGE_TAG:?err} AS libpointmatcher-dependencies

LABEL org.opencontainers.image.authors="luc.coupal.1@ulaval.ca"

ARG LIBPOINTMATCHER_VERSION
ENV LIBPOINTMATCHER_VERSION=${LIBPOINTMATCHER_VERSION:?'Build argument needs to be set and non-empty.'}
LABEL libpointmatcher.version="${LIBPOINTMATCHER_VERSION}"

ARG LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG="--compile-test"

ARG LPM_INSTALLED_LIBRARIES_PATH
ARG LPM_LIBPOINTMATCHER_SRC_REPO_NAME
ENV LPM_INSTALLED_LIBRARIES_PATH=${LPM_INSTALLED_LIBRARIES_PATH:?'Build argument needs to be set and non-empty.'}
ENV LPM_LIBPOINTMATCHER_SRC_REPO_NAME=${LPM_LIBPOINTMATCHER_SRC_REPO_NAME:?'Build argument needs to be set and non-empty.'}

ARG IS_TEAMCITY_RUN
ENV IS_TEAMCITY_RUN=${IS_TEAMCITY_RUN:-false}

SHELL ["/bin/bash", "-c"]
ARG DEBIAN_FRONTEND=noninteractive


# ====Build system related setup====================================================================================
WORKDIR "${LPM_INSTALLED_LIBRARIES_PATH}/${LPM_LIBPOINTMATCHER_SRC_REPO_NAME}-CICD"

# Copy all files from the checkout branch in the repository (except those in the .dockerignore)
COPY ./build_system/ ./build_system/

WORKDIR ./build_system/ubuntu

RUN chmod +x lpm_install_libpointmatcher_ubuntu.bash
RUN chmod +x entrypoint.bash

## ToDo: on task end >> delete next bloc ↓↓
#RUN chmod +x lpm_install_doc_dependencies_ubuntu.bash
#RUN bash lpm_install_doc_dependencies_ubuntu.bash

# ====Install Libpointmatcher=======================================================================================

RUN bash lpm_install_libpointmatcher_ubuntu.bash \
    --libpointmatcher-version ${LIBPOINTMATCHER_VERSION} \
    ${LIBPOINTMATCHER_INSTALL_SCRIPT_FLAG}


# ====End==========================================================================================================
FROM libpointmatcher-dependencies AS libpointmatcher-release

WORKDIR "${LPM_INSTALLED_LIBRARIES_PATH}/${LPM_LIBPOINTMATCHER_SRC_REPO_NAME}-CICD"

ENTRYPOINT [ "./build_system/ubuntu/entrypoint.bash" ]
CMD [ "bash" ]
